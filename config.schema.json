{
  "pluginAlias": "LGThinQ",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "schema": {
	"auth_mode": {
	  "title": "Auth Mode",
	  "type": "string",
	  "default": "account",
	  "oneOf": [
		{ "title": "LG Account", "enum": ["account"] },
		{ "title": "Token", "enum": ["token"] }
	  ]
	},
	"username": {
	  "title": "Username",
	  "type": "string",
	  "condition": {
		"functionBody": "return model.auth_mode === 'account';"
	  }
	},
	"password": {
	  "title": "Password",
	  "type": "string",
	  "condition": {
		"functionBody": "return model.auth_mode === 'account';"
	  }
	},
	"refresh_token": {
	  "title": "Refresh Token",
	  "type": "string",
	  "condition": {
		"functionBody": "return model.auth_mode === 'token';"
	  }
	},
	"country": {
	  "title": "Country",
	  "type": "string",
	  "default": "US",
	  "required": true
	},
	"language": {
	  "title": "Language",
	  "type": "string",
	  "default": "en-US",
	  "required": true
	},
	"refresh_interval": {
	  "title": "Refresh interval (in second)",
	  "type": "number",
	  "default": 60,
	  "required": false
	},
	"thinq1": {
	  "title": "Enable ThinQ1 Support?",
	  "type": "boolean",
	  "default": false
	},
	"devices": {
	  "title": "Devices",
	  "description": "leave it empty to enable all device",
	  "type": "array",
	  "items": {
		"type": "object",
		"properties": {
		  "id": {
			"title": "Device ID",
			"type": "string",
			"required": true
		  },
		  "name": {
			"title": "Device Name",
			"type": "string"
		  },
		  "type": {
			"title": "Device Type",
			"type": "string",
			"enum": [
			  "AC",
			  "WASHER",
			  "WASHER_NEW",
			  "WASH_TOWER",
			  "DRYER",
			  "REFRIGERATOR",
			  "DISHWASHER",
			  "AIR_PURIFIER",
			  "DEHUMIDIFIER"
			],
			"condition": {
			  "functionBody": "return false;"
			}
		  },
		  "washer_trigger": {
			"title": "Enable washer program finished trigger?",
			"type": "boolean",
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['WASHER','WASHER_NEW', 'WASH_TOWER'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_air_quality": {
			"title": "Enable Air Quality",
			"description": "if your device supported Air Quality sensor",
			"type": "boolean",
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_mode": {
			"title": "AC Mode (Heating or Cooling or Both)",
			"type": "string",
			"default": "BOTH",
			"oneOf": [
			  {
				"title": "Both Heating and Cooling mode",
				"enum": ["BOTH"]
			  },
			  {
				"title": "Cooling mode only",
				"enum": ["COOLING"]
			  },
			  {
				"title": "Heating mode only",
				"enum": ["HEATING"]
			  }
			],
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_swing_mode": {
			"title": "Swing Mode (vertical or horizontal)",
			"type": "string",
			"default": "BOTH",
			"oneOf": [
			  {
				"title": "Both vertical and horizontal swing",
				"enum": ["BOTH"]
			  },
			  {
				"title": "Vertical swing only",
				"enum": ["VERTICAL"]
			  },
			  {
				"title": "Horizontal swing only",
				"enum": ["HORIZONTAL"]
			  }
			],
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_temperature_sensor": {
			"title": "Current temperature as sensor",
			"type": "boolean",
			"default": false,
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_led_control": {
			"title": "Enable led panel control",
			"type": "boolean",
			"default": false,
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  },
		  "ac_fan_control": {
			"title": "Enable separate fan control",
			"type": "boolean",
			"default": false,
			"condition": {
			  "functionBody": "return model.devices && model.devices[arrayIndices] && ['AC'].includes(model.devices[arrayIndices].type);"
			}
		  }
		}
	  }
	}
  }
}
